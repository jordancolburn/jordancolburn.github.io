<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-01-12T10:45:55-05:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Jordan Colburn</title><subtitle>Personal website for Jordan Colburn. Software Development, Music, Electronics, Photography and Videography.</subtitle><entry><title type="html">Adjusting Aftertouch on a Korg Triton LE</title><link href="http://localhost:4000/music/electronics/2017/12/26/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Adjusting Aftertouch on a Korg Triton LE" /><published>2017-12-26T20:34:33-05:00</published><updated>2017-12-26T20:34:33-05:00</updated><id>http://localhost:4000/music/electronics/2017/12/26/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/music/electronics/2017/12/26/welcome-to-jekyll.html">&lt;p&gt;This all started when I recently played a Dave Smith Pro 2 in a music store and found it to be incredibly expressive. Specifically, the aftertouch was amazing and allowed me to really dig in and accent notes in a more expressive way similar to what I might do on a guitar.&lt;/p&gt;

&lt;p&gt;In an attempt to stave off the gear lust and avoid getting another keyboard, I went home and tried to program some similar patches on my Korg Triton LE 61-key and found myself disapointed. Even after trying all of the after touch curves, it seems like it was basically just on/off and I had to dig in really really hard to make anything happen.&lt;/p&gt;

&lt;p&gt;So I found out that many keyboads have a small auxillary circuit board just managing aftertouch inside. These instructions should work on a Korg Triton LE, but will probably work on regular tritons, karma, trinity and even keyboards from roland and other manufacturers, since I think many of the manufacturers used a smilar supplier for keyboards and aftertouch.&lt;/p&gt;

&lt;p&gt;** Disclaimer: This simple tip assumes you have basic knowledge of electronics and repair. I am not liable for any injury to yourself or your equipment if you follow these tips and do not know what you are doing **&lt;/p&gt;

&lt;p&gt;With that out of the way, first try all of the aftertouch curves in the global settings. If one of those works, Great! If not, you are in the same boat as me and likely need a hardware adjustment. First, remove all screws from the back of the keyboard and find the board underneath the buttons above the joystick. Mine has one potentiometer that can adjust the offset of the aftertouch signal. You can also see where another potentiometer can adjust the gain, but mine has been replaced by a resistor (probably at the factory in an attempt to save like 10 cents on the part).&lt;/p&gt;

&lt;p&gt;Then, I had to prop my keyboard up vertically to make sure I could still pay some test notes and adjust the offset knob. Be careful since the keys are probably no longer attached to anything. Plug in power and headphones and find a sound with a decent aftertouch modulation routing (make sure it does something very noticable). I went to the init piano patch, reduced the filter halfway and used aftertouch to control the filter cutoff with very high intensity. This way the sound should brighten up smoothly as you dig into the aftertouch. Unfortunatly, with my bad aftertouch, it was still on/off with a dull sound and a super bright jumop as I dug in.&lt;/p&gt;

&lt;p&gt;So I swept the offset potentiomenter trying notes until I found a set point that resulted in a smooth transition that would allow a lot of expressive playing. Now that you’ve found your sweet spot, close up the keyboard and enjoy playing it!&lt;/p&gt;</content><author><name></name></author><summary type="html">This all started when I recently played a Dave Smith Pro 2 in a music store and found it to be incredibly expressive. Specifically, the aftertouch was amazing and allowed me to really dig in and accent notes in a more expressive way similar to what I might do on a guitar.</summary></entry><entry><title type="html">Deploying a Simple App with Docker and Now</title><link href="http://localhost:4000/software/2017/10/26/welcomel.html" rel="alternate" type="text/html" title="Deploying a Simple App with Docker and Now" /><published>2017-10-26T21:34:33-04:00</published><updated>2017-10-26T21:34:33-04:00</updated><id>http://localhost:4000/software/2017/10/26/welcomel</id><content type="html" xml:base="http://localhost:4000/software/2017/10/26/welcomel.html">&lt;p&gt;To preface this: I am from the college basketball-crazed state of Kentucky. So naturally, March Madness results in a lot of time spent filling out brackets. Last year I wrote a small python script to simulate the tournament using a 50/50 coin flip, as well as a weighted coin flip that took a weight factor and slanted toward higher seeds based on that factor.&lt;/p&gt;

&lt;p&gt;This year, I wanted to take it a step further and turn my little script into a website anyone can use. Since I haven’t spent much time with Docker, I decided to see how easy it was to deploy my python script in a container. First I modified my tournament class to return the results in a JSON format. Then, I used Flask (very lightweight server for python) to serve those results over network calls. Then I found a dockerfile to install python and my flask dependencies. For deployment, I used Now (https://zeit.co/now#whats-now). I had to tell docker to expose port 5000 (where flask was running) and then simply type ‘now’ in the command line and wait. Now generated a URL where my app was now live in the cloud.&lt;/p&gt;

&lt;p&gt;For a front end, I wanted to save some time and just used an excel NCAA tournamenent template I found online and exported it to and HTML web page. I then added a very small angular controller to get the data from my python container when the user selected buttons. For displaying the results, I just used angular data binding inside the HTML table that excel created. Now also handles static sites as well as Node and Docker, so I was able to deploy my front end with now as well. Using docker alias, I then connected it to my custom url, bracketflip.com.&lt;/p&gt;

&lt;p&gt;All in all, with a little bit of effort, docker and now make a great pair to easily and quickly deploy small sites and web apps.&lt;/p&gt;</content><author><name></name></author><summary type="html">To preface this: I am from the college basketball-crazed state of Kentucky. So naturally, March Madness results in a lot of time spent filling out brackets. Last year I wrote a small python script to simulate the tournament using a 50/50 coin flip, as well as a weighted coin flip that took a weight factor and slanted toward higher seeds based on that factor.</summary></entry></feed>